# Copyright (c) 2021 SIL International. MIT License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Build flatpak

on:
  push:
    branches: [ org.sil.FieldWorks ]
  pull_request:
    branches: [ org.sil.FieldWorks ]
  workflow_dispatch:

jobs:
  flatpak:
    name: "Flatpak"
    runs-on: ubuntu-latest
    steps:
      - name: Adjust disk space
        run: |
          set -xueo pipefail
          df -h /

          sudo apt-get purge --assume-yes \
            ghc-8.10.4 \
            ghc-9.0.1 \
            google-cloud-sdk \
            adoptopenjdk-11-hotspot \
            dotnet-sdk-5.0 \
            adoptopenjdk-8-hotspot \
            dotnet-sdk-3.1 \
            powershell \
            snapd \
            mono-devel \
            monodoc-http \
            mongodb-org-server \
            dotnet-runtime-3.1 \
            linux-azure-headers-5.4.0-1047 \
            linux-azure-headers-5.4.0-1046 \
            dotnet-runtime-5.0 \
            openjdk-11-jre-headless \
            mongodb-org-mongos \
            mono-llvm-tools \
            libclang-common-11-dev \
            gcc-10 \
            libclang-common-10-dev \
            mongodb-org-shell \
            gcc-11 \
            libclang-common-9-dev \
            firefox \
            google-chrome-stable

          # echo 'Packages using space:'
          # dpkg-query -W -f='${Installed-Size}\t${binary:Package}\t${Version}\n' | sort --numeric-sort --reverse|head --lines=30

          sudo apt-get autoremove --assume-yes
          sudo apt-get clean
          # du -sh /usr/share/dotnet /usr/local/lib/android /opt/ghc || true
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          # df -h /
      - uses: actions/checkout@v2
      - name: Install flatpak dependencies
        run: |
          set -xueo pipefail
          sudo apt-get update
          sudo apt-get install flatpak-builder
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install --assumeyes flathub org.gnome.Sdk//3.36
          sudo flatpak install --assumeyes flathub org.gnome.Platform//3.36
      - name: Build flatpak package
        run: |
          set -xueo pipefail
          flatpak-builder --user --repo=local-repo --keep-build-dirs --force-clean build-dir org.sil.FieldWorks.yml
      - name: Determine package version
        run: |
          set -xueo pipefail
          cat ./.flatpak-builder/build/fieldworks-1/fw/Src/MasterVersionInfo.txt
          source ./.flatpak-builder/build/fieldworks-1/fw/Src/MasterVersionInfo.txt
          # VERSION_SUFFIX will be empty, or set to FWBETAVERSION but with a dash before it.
          VERSION_SUFFIX="${FWBETAVERSION:+"-${FWBETAVERSION}"}"
          PACKAGE_VERSION="${FWMAJOR}.${FWMINOR}.${FWREVISION}.${GITHUB_RUN_NUMBER}${VERSION_SUFFIX}-experimental-$(date +'%Y%m%d')-${GITHUB_SHA::7}"
          TAG_NAME="v${FWMAJOR}.${FWMINOR}.${FWREVISION}.${GITHUB_RUN_NUMBER}${VERSION_SUFFIX}-experimental"
          echo set tag name to ${TAG_NAME} via: "v${FWMAJOR}.${FWMINOR}.${FWREVISION}.${GITHUB_RUN_NUMBER}${VERSION_SUFFIX}-experimental"
          echo >> "${GITHUB_ENV}" "FWMAJOR=${FWMAJOR}"
          echo >> "${GITHUB_ENV}" "FWMINOR=${FWMINOR}"
          echo >> "${GITHUB_ENV}" "FWREVISION=${FWREVISION}"
          echo >> "${GITHUB_ENV}" "FWBETAVERSION=${FWBETAVERSION}"
          echo >> "${GITHUB_ENV}" "VERSION_SUFFIX=${VERSION_SUFFIX}"
          echo >> "${GITHUB_ENV}" "PACKAGE_VERSION=${PACKAGE_VERSION}"
          echo >> "${GITHUB_ENV}" "TAG_NAME=${TAG_NAME}"
      - name: Create flatpak bundle
        run: |
          set -xueo pipefail
          flatpak --user remote-add --no-gpg-verify --if-not-exists local-repo ./local-repo
          flatpak --user install --or-update --noninteractive local-repo org.sil.FieldWorks org.sil.FieldWorks.Debug
          flatpak build-bundle           ./local-repo "fieldworks-${{ env.PACKAGE_VERSION }}.flatpak"        org.sil.FieldWorks
          flatpak build-bundle --runtime ./local-repo "fieldworks-${{ env.PACKAGE_VERSION }}-Debug.flatpak"  org.sil.FieldWorks.Debug
          flatpak build-bundle --runtime ./local-repo "fieldworks-${{ env.PACKAGE_VERSION }}-Locale.flatpak" org.sil.FieldWorks.Locale
          mkdir -p artifacts
          mv -v fieldworks-*.flatpak artifacts
          ls -al artifacts
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: fw-flatpak-bundle
          path: |
            artifacts/
      - name: Publish artifacts as Github release
        uses: ncipollo/release-action@v1.8.6
        with:
          artifacts: "artifacts/*"
          prerelease: true
          # Branch to build from
          commit: org.sil.FieldWorks
          # New tag name to use
          tag: "${{ env.TAG_NAME }}"
          allowUpdates: true
          artifactErrorsFailBuild: true
          name: "v${{ env.PACKAGE_VERSION }}"
          body: "Automatically generated FieldWorks flatpak package for internal testing. Not for use on production machines or with real data."
          token: ${{ secrets.GITHUB_TOKEN }}
